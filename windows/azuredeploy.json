{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmInstances": {
            "type": "int",
            "metadata": {
                "description": "Number of Windows worker nodes"
            },
            "defaultValue": 3
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "Size of the VM to be provisioned for Windows worker nodes"
            },
            "defaultValue": "Standard_DS2_v2"
        }
    },
    "variables": {
        "storage": {
            "diagnostics": "[concat('diagnostics', uniqueString(resourceGroup().id))]"
        },
        "vNet": {
            "id": "[resourceId('Microsoft.Network/virtualNetworks', 'swarm-vnet')]"
        },
        "workers": {
            "instances": "[parameters('vmInstances')]",
            "avSet": "workers",
            "vnet": "[resourceId('Microsoft.Network/virtualNetworks', 'swarm-vnet')]",
            "subnet": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'swarm-vnet', 'swarm-subnet')]",
            "vmSize": "Standard_DS2_v2",
            "imagePublisher": "MicrosoftWindowsServer",
            "imageOffer": "WindowsServer",
            "imageSku": "2016-Datacenter"
        },
        "scripts-base": "https://raw.githubusercontent.com/stevenfollis/chantier/master/active-directory/scripts/",
        "scripts": {
            "configureAD": "[concat(variables('scripts-base'), 'CreateADPDC.zip')]",
            "createTestUsers": "[concat(variables('scripts-base'), 'CreateTestUsers.ps1')]"
        }
    },
    "resources": [
        {
            "name": "[variables('storage').diagnostics]",
            "type": "Microsoft.Storage/storageAccounts",
            "location": "[resourceGroup().location]",
            "apiVersion": "2016-01-01",
            "sku": {
                "name": "Standard_LRS"
            },
            "dependsOn": [],
            "tags": {
                "displayName": "DiagnosticStorageAccount"
            },
            "kind": "Storage"
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "workers",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 5
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat('worker', padLeft(copyIndex(1), 2, '0'))]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "PIPCopy",
                "count": "[variables('workers').instances]"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[concat(resourceGroup().name, '-winworker', padLeft(copyIndex(1), 2, '0'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat('worker', padLeft(copyIndex(1), 2, '0'))]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "NICCopy",
                "count": "[variables('workers').instances]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat('172.31.0.10', copyIndex(5))]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('worker', padLeft(copyIndex(1), 2, '0')))]"
                            },
                            "subnet": {
                                "id": "[variables('workers').subnet]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableIPForwarding": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat('worker', padLeft(copyIndex(1), 2, '0')))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat('worker', padLeft(copyIndex(1), 2, '0'))]",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "VMcopy",
                "count": "[variables('workers').instances]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('workers').vmSize]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('workers').imagePublisher]",
                        "offer": "[variables('workers').imageOffer]",
                        "sku": "[variables('workers').imageSku]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat('winworker', padLeft(copyIndex(1), 2, '0'))]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        },
                        "caching": "ReadWrite"
                    }
                },
                "osProfile": {
                    "computerName": "[concat('worker', padLeft(copyIndex(1), 2, '0'))]",
                    "adminUsername": "eeadmin",
                    "adminPassword": "Docker123!"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('worker', padLeft(copyIndex(1), 2, '0')))]"
                        }
                    ]
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', 'workers')]"
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storage').diagnostics), '2016-01-01').primaryEndpoints.blob]"
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', variables('workers').avSet)]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storage').diagnostics)]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat('worker', padLeft(copyIndex(1), 2, '0')))]"
            ],
            "resources": []
        }
    ],
    "outputs": {}
}